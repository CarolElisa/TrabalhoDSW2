{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,gBAAgB,SAAS,cAAc,CAAC;IAC9C,MAAM,YAAY,SAAS,cAAc,CAAC;IAE1C,+BAA+B;IAC/B,MAAM,YAAY,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IAC5D,MAAM,SAAS,UAAU,GAAG,CAAC;IAE7B,yCAAyC;IACzC,eAAe,cAAc,EAAE;QAC7B,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,+BAA+B,EAAE,IAAI;YACnE,MAAM,UAAU,MAAM,SAAS,IAAI;YACnC,IAAI,SACF,oBAAoB;iBACf;gBACL,MAAM;gBACN,OAAO,QAAQ,CAAC,IAAI,GAAG;YACzB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,8BAA2B;YACzC,MAAM;QACR;IACF;IAEA,6DAA6D;IAC7D,SAAS,oBAAoB,OAAO;QAClC,SAAS,cAAc,CAAC,QAAQ,KAAK,GAAG,QAAQ,IAAI;QACpD,SAAS,cAAc,CAAC,SAAS,KAAK,GAAG,QAAQ,KAAK;QACtD,SAAS,cAAc,CAAC,WAAW,KAAK,GAAG,QAAQ,GAAG;QACtD,SAAS,cAAc,CAAC,OAAO,KAAK,GAAG,QAAQ,GAAG;QAClD,SAAS,cAAc,CAAC,OAAO,KAAK,GAAG,QAAQ,UAAU;QACzD,SAAS,cAAc,CAAC,UAAU,KAAK,GAAG,QAAQ,GAAG;QACrD,SAAS,cAAc,CAAC,UAAU,KAAK,GAAG,QAAQ,MAAM;QACxD,SAAS,cAAc,CAAC,UAAU,KAAK,GAAG,QAAQ,EAAE;IACtD;IAEA,gDAAgD;IAChD,eAAe,eAAe,GAAG;QAC/B,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,yBAAyB,EAAE,IAAI,MAAM,CAAC;YACpE,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,IAAI,KAAK,IAAI,EACX,MAAM,IAAI,MAAM;YAElB,OAAO;QACT,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,MAAM;YACN,OAAO;QACT;IACF;IAEA,4DAA4D;IAC5D,SAAS,cAAc,CAAC,OAAO,gBAAgB,CAAC,QAAQ,OAAO;QAC7D,MAAM,MAAM,MAAM,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,KAAK,kCAAkC;QACrF,IAAI,IAAI,MAAM,KAAK,GAAG;YACpB,MAAM,WAAW,MAAM,eAAe;YACtC,IAAI,UAAU;gBACZ,SAAS,cAAc,CAAC,OAAO,KAAK,GAAG,SAAS,UAAU;gBAC1D,SAAS,cAAc,CAAC,UAAU,KAAK,GAAG,SAAS,UAAU;gBAC7D,SAAS,cAAc,CAAC,UAAU,KAAK,GAAG,SAAS,EAAE;YACvD;QACF;IACF;IAEA,iDAAiD;IACjD,cAAc,gBAAgB,CAAC,UAAU,OAAO;QAC9C,MAAM,cAAc;QAEpB,8BAA8B;QAC9B,MAAM,mBAAmB;YACvB,OAAO,SAAS,cAAc,CAAC,SAAS,KAAK;YAC7C,KAAK,SAAS,cAAc,CAAC,WAAW,KAAK;YAC7C,OAAO,SAAS,cAAc,CAAC,SAAS,KAAK,IAAI;YACjD,KAAK,SAAS,cAAc,CAAC,OAAO,KAAK;YACzC,YAAY,SAAS,cAAc,CAAC,OAAO,KAAK;YAChD,KAAK,SAAS,cAAc,CAAC,UAAU,KAAK;YAC5C,QAAQ,SAAS,cAAc,CAAC,UAAU,KAAK;YAC/C,IAAI,SAAS,cAAc,CAAC,UAAU,KAAK;QAC7C;QAEA,8CAA8C;QAC9C,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,+BAA+B,EAAE,QAAQ,EAAE;gBACvE,QAAQ;gBACR,SAAS;oBACP,gBAAgB;gBAClB;gBACA,MAAM,KAAK,SAAS,CAAC;YACvB;YAEA,IAAI,SAAS,EAAE,EAAE;gBACf,MAAM;gBACN,OAAO,QAAQ,CAAC,IAAI,GAAG,CAAC,aAAa,EAAE,QAAQ,EAAE,iCAAiC;YACpF,OACE,MAAM,IAAI,MAAM;QAEpB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,MAAM;QACR;IACF;IAEA,mCAAmC;IACnC,UAAU,gBAAgB,CAAC,SAAS;QAClC,OAAO,QAAQ,CAAC,IAAI,GAAG,CAAC,aAAa,EAAE,QAAQ;IACjD;IAEA,gBAAgB;IAChB,IAAI,QACF,cAAc;SACT;QACL,MAAM;QACN,OAAO,QAAQ,CAAC,IAAI,GAAG;IACzB;AACF,IAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA","sources":["js/meus_dados.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n  const formMeusDados = document.getElementById('form-meus-dados');\r\n  const btnVoltar = document.getElementById('btn-voltar');\r\n\r\n  // Obtém o ID do usuário da URL\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const userId = urlParams.get('id');\r\n\r\n  // Função para buscar os dados do usuário\r\n  async function buscarUsuario(id) {\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/usuarios/${id}`);\r\n      const usuario = await response.json();\r\n      if (usuario) {\r\n        preencherFormulario(usuario);\r\n      } else {\r\n        alert('Usuário não encontrado.');\r\n        window.location.href = 'login.html';\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao buscar usuário:', error);\r\n      alert('Erro ao carregar informações do usuário.');\r\n    }\r\n  }\r\n\r\n  // Função para preencher o formulário com os dados do usuário\r\n  function preencherFormulario(usuario) {\r\n    document.getElementById('nome').value = usuario.nome;\r\n    document.getElementById('email').value = usuario.email;\r\n    document.getElementById('celular').value = usuario.tel;\r\n    document.getElementById('cep').value = usuario.cep;\r\n    document.getElementById('rua').value = usuario.logradouro;\r\n    document.getElementById('numero').value = usuario.num;\r\n    document.getElementById('cidade').value = usuario.cidade;\r\n    document.getElementById('estado').value = usuario.uf;\r\n  }\r\n\r\n  // Função para buscar o endereço a partir do CEP\r\n  async function buscarEndereco(cep) {\r\n    try {\r\n      const response = await fetch(`https://viacep.com.br/ws/${cep}/json/`);\r\n      const data = await response.json();\r\n      if (data.erro) {\r\n        throw new Error('CEP não encontrado');\r\n      }\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Erro ao buscar CEP:', error);\r\n      alert('CEP não encontrado. Por favor, verifique o CEP digitado.');\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Evento para buscar o endereço quando o CEP for preenchido\r\n  document.getElementById('cep').addEventListener('blur', async (event) => {\r\n    const cep = event.target.value.replace(/\\D/g, ''); // Remove caracteres não numéricos\r\n    if (cep.length === 8) {\r\n      const endereco = await buscarEndereco(cep);\r\n      if (endereco) {\r\n        document.getElementById('rua').value = endereco.logradouro;\r\n        document.getElementById('cidade').value = endereco.localidade;\r\n        document.getElementById('estado').value = endereco.uf;\r\n      }\r\n    }\r\n  });\r\n\r\n  // Evento para enviar o formulário de atualização\r\n  formMeusDados.addEventListener('submit', async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Coletar dados do formulário\r\n    const dadosAtualizados = {\r\n      email: document.getElementById('email').value,\r\n      tel: document.getElementById('celular').value,\r\n      senha: document.getElementById('senha').value || undefined, // Senha é opcional\r\n      cep: document.getElementById('cep').value,\r\n      logradouro: document.getElementById('rua').value,\r\n      num: document.getElementById('numero').value,\r\n      cidade: document.getElementById('cidade').value,\r\n      uf: document.getElementById('estado').value,\r\n    };\r\n\r\n    // Enviar dados atualizados para o JSON Server\r\n    try {\r\n      const response = await fetch(`http://localhost:3000/usuarios/${userId}`, {\r\n        method: 'PATCH', // Usamos PATCH para atualizar apenas os campos fornecidos\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(dadosAtualizados),\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Dados atualizados com sucesso!');\r\n        window.location.href = `home.html?id=${userId}`; // Redireciona para a página home\r\n      } else {\r\n        throw new Error('Erro ao atualizar dados');\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao atualizar dados:', error);\r\n      alert('Erro ao atualizar dados. Tente novamente.');\r\n    }\r\n  });\r\n\r\n  // Evento para voltar à página home\r\n  btnVoltar.addEventListener('click', () => {\r\n    window.location.href = `home.html?id=${userId}`;\r\n  });\r\n\r\n  // Inicialização\r\n  if (userId) {\r\n    buscarUsuario(userId);\r\n  } else {\r\n    alert('ID do usuário não fornecido.');\r\n    window.location.href = 'login.html';\r\n  }\r\n});\r\n\r\n\r\n/*\r\n// Função para buscar endereço pelo CEP usando a API do ViaCEP\r\nfunction buscarEnderecoPorCEP() {\r\n    const cep = document.getElementById('cep').value.replace(/\\D/g, ''); // Remove caracteres não numéricos\r\n    if (cep.length !== 8) {\r\n        alert(\"CEP inválido. O CEP deve ter 8 dígitos.\");\r\n        return;\r\n    }\r\n\r\n    fetch(`https://viacep.com.br/ws/${cep}/json/`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            if (data.erro) {\r\n                alert(\"CEP não encontrado.\");\r\n                return;\r\n            }\r\n\r\n            // Preenche os campos com os dados do CEP\r\n            document.getElementById('rua').value = data.logradouro;\r\n            document.getElementById('cidade').value = data.localidade;\r\n            document.getElementById('estado').value = data.uf;\r\n        })\r\n        .catch(error => {\r\n            console.error(\"Erro ao buscar CEP:\", error);\r\n            alert(\"Erro ao buscar CEP. Tente novamente.\");\r\n        });\r\n}\r\n\r\n// Função para redirecionar para a página inicial\r\nfunction redirecionarParaHome(event) {\r\n    event.preventDefault(); // Evita o envio do formulário\r\n\r\n    // Aqui você pode adicionar a lógica para enviar os dados atualizados para o servidor\r\n    // Exemplo de envio para o servidor (substitua por sua lógica real)\r\n    // fetch('/atualizar-dados', {\r\n    //     method: 'POST',\r\n    //     body: JSON.stringify({\r\n    //         nome: document.getElementById('nome').value,\r\n    //         email: document.getElementById('email').value,\r\n    //         celular: document.getElementById('celular').value,\r\n    //         senha: document.getElementById('senha').value,\r\n    //         cep: document.getElementById('cep').value,\r\n    //         rua: document.getElementById('rua').value,\r\n    //         numero: document.getElementById('numero').value,\r\n    //         cidade: document.getElementById('cidade').value,\r\n    //         estado: document.getElementById('estado').value\r\n    //     }),\r\n    //     headers: { 'Content-Type': 'application/json' }\r\n    // });\r\n\r\n    // Redireciona para a página inicial\r\n    window.location.href = \"home.html\";\r\n}\r\n\r\n// Adiciona um evento para buscar o endereço quando o CEP for preenchido\r\ndocument.getElementById('cep').addEventListener('blur', buscarEnderecoPorCEP);\r\n\r\n// Adiciona um evento para o envio do formulário\r\ndocument.getElementById('form-meus-dados').addEventListener('submit', redirecionarParaHome);\r\n\r\n// Adiciona um evento para o botão \"Voltar\"\r\ndocument.getElementById('btn-voltar').addEventListener('click', () => {\r\n    window.location.href = \"home.html\";\r\n});\r\n\r\n*/"],"names":[],"version":3,"file":"meus_dados.db6a0733.js.map","sourceRoot":"/__parcel_source_root/"}