{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC5C,MAAM,qBAAqB,SAAS,aAAa,CAAC;IAClD,MAAM,YAAY,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IAC5D,MAAM,SAAS,UAAU,GAAG,CAAC;IAE7B,gFAAgF;IAChF,IAAI,QACF;IAGF,0DAA0D;IAC1D,SAAS;QACP,mBAAmB,SAAS,GAAG,CAAC;;;;;;IAMhC,CAAC;QAED,mEAAmE;QACnE,mBAAmB,gBAAgB,CAAC,UAAU,OAAO;YACnD,MAAM,cAAc;YAEpB,iCAAiC;YACjC,MAAM,YAAY,SAAS,cAAc,CAAC,cAAc,KAAK;YAC7D,MAAM,iBAAiB,SAAS,cAAc,CAAC,mBAAmB,KAAK;YAEvE,gCAAgC;YAChC,IAAI,cAAc,gBAAgB;gBAChC,MAAM;gBACN;YACF;YAEA,wCAAwC;YACxC,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,CAAC,+BAA+B,EAAE,QAAQ,EAAE;oBACvE,QAAQ;oBACR,SAAS;wBACP,gBAAgB;oBAClB;oBACA,MAAM,KAAK,SAAS,CAAC;wBAAE,OAAO;oBAAU;gBAC1C;gBAEA,IAAI,SAAS,EAAE,EAAE;oBACf,MAAM;oBACN,OAAO,QAAQ,CAAC,IAAI,GAAG,sBAAsB,qCAAqC;gBACpF,OACE,MAAM,IAAI,MAAM;YAEpB,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,4BAA4B;gBAC1C,MAAM;YACR;QACF;IACF;IAEA,oFAAoF;IACpF,IAAI,CAAC,QACH,mBAAmB,gBAAgB,CAAC,UAAU,OAAO;QACnD,MAAM,cAAc;QAEpB,gCAAgC;QAChC,MAAM,QAAQ,mBAAmB,aAAa,CAAC,uBAAuB,KAAK;QAE3E,kBAAkB;QAClB,MAAM,aAAa;IACrB;IAGF,8CAA8C;IAC9C,eAAe,aAAa,KAAK;QAC/B,IAAI;YACF,yCAAyC;YACzC,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,WAAW,MAAM,SAAS,IAAI;YAEpC,mDAAmD;YACnD,MAAM,UAAU,SAAS,IAAI,CAAC,CAAC,OAAS,KAAK,KAAK,KAAK;YAEvD,IAAI,SACF,qEAAqE;YACrE,OAAO,QAAQ,CAAC,IAAI,GAAG,CAAC,sBAAsB,EAAE,QAAQ,EAAE,EAAE;iBAE5D,yBAAyB;YACzB,MAAM;QAEV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,2BAA2B;YACzC,MAAM;QACR;IACF;AACF","sources":["js/senha.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n  const formRecuperarSenha = document.querySelector('form');\n  const urlParams = new URLSearchParams(window.location.search);\n  const userId = urlParams.get('id');\n\n  // Se o ID do usuário estiver na URL, exibe o formulário de redefinição de senha\n  if (userId) {\n    exibirFormularioRedefinicao();\n  }\n\n  // Função para exibir o formulário de redefinição de senha\n  function exibirFormularioRedefinicao() {\n    formRecuperarSenha.innerHTML = `\n      <h2 class=\"text-blue-900 mb-5 text-2xl\">Redefinir Senha</h2>\n      <p class=\"text-gray-700 mb-5\">Digite sua nova senha abaixo.</p>\n      <input type=\"password\" id=\"nova-senha\" placeholder=\"Nova Senha\" required class=\"p-2 border border-gray-300 rounded-md mb-4\">\n      <input type=\"password\" id=\"confirmar-senha\" placeholder=\"Confirmar Nova Senha\" required class=\"p-2 border border-gray-300 rounded-md mb-4\">\n      <button type=\"submit\" class=\"btn-primary bg-orange-500 text-white p-2 rounded-md hover:bg-orange-600\">Redefinir Senha</button>\n    `;\n\n    // Adiciona o evento de envio do formulário de redefinição de senha\n    formRecuperarSenha.addEventListener('submit', async (event) => {\n      event.preventDefault();\n\n      // Coleta as senhas do formulário\n      const novaSenha = document.getElementById('nova-senha').value;\n      const confirmarSenha = document.getElementById('confirmar-senha').value;\n\n      // Valida se as senhas coincidem\n      if (novaSenha !== confirmarSenha) {\n        alert('As senhas não coincidem. Tente novamente.');\n        return;\n      }\n\n      // Envia a nova senha para o JSON Server\n      try {\n        const response = await fetch(`http://localhost:3000/usuarios/${userId}`, {\n          method: 'PATCH',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ senha: novaSenha }),\n        });\n\n        if (response.ok) {\n          alert('Senha redefinida com sucesso!');\n          window.location.href = '../html/login.html'; // Redireciona para a página de login\n        } else {\n          throw new Error('Erro ao redefinir senha');\n        }\n      } catch (error) {\n        console.error('Erro ao redefinir senha:', error);\n        alert('Erro ao redefinir senha. Tente novamente.');\n      }\n    });\n  }\n\n  // Se o ID do usuário não estiver na URL, exibe o formulário de recuperação de senha\n  if (!userId) {\n    formRecuperarSenha.addEventListener('submit', async (event) => {\n      event.preventDefault();\n\n      // Coleta o e-mail do formulário\n      const email = formRecuperarSenha.querySelector('input[type=\"email\"]').value;\n\n      // Valida o e-mail\n      await validarEmail(email);\n    });\n  }\n\n  // Função para validar o e-mail e redirecionar\n  async function validarEmail(email) {\n    try {\n      // Busca todos os usuários no JSON Server\n      const response = await fetch('http://localhost:3000/usuarios');\n      const usuarios = await response.json();\n\n      // Verifica se há um usuário com o e-mail fornecido\n      const usuario = usuarios.find((user) => user.email === email);\n\n      if (usuario) {\n        // E-mail válido: redireciona para a mesma página com o ID do usuário\n        window.location.href = `../html/senha.html?id=${usuario.id}`;\n      } else {\n        // Exibe mensagem de erro\n        alert('E-mail não encontrado. Verifique o e-mail digitado.');\n      }\n    } catch (error) {\n      console.error('Erro ao validar e-mail:', error);\n      alert('Erro ao tentar recuperar senha. Tente novamente.');\n    }\n  }\n});"],"names":[],"version":3,"file":"senha.28848ece.js.map","sourceRoot":"/__parcel_source_root/"}